sac:
  alpha: 0.1 # 初始alpha值，float类型
  alr: 1e-4 # 用于更新alpha的学习率，float类型
  qlr: 1e-4 # 用于更新q函数的学习率，float类型
  policy_lr: 1e-4 # 用于更新策略函数的学习率，float类型
  mem_size: 1e6 # 回放缓冲区的大小，int类型，默认为1e6

training:
  max_total_steps: 500000 # 训练过程中环境步骤的最大值
  max_steps: 1000 # 每个episode的最大步骤数
  batch_size: 256 # 从回放记忆中提取的样本大小
  intermediate_policies: True # 是否保存每个训练阶段的中间策略
  verbose: True # 是否打印训练过程中的详细信息
  path: "./" # 保存中间策略的路径，默认为'./'
  final_policy: "./final_policy.pth" # 保存中间策略的路径，默认为'./'
  update_all: True # 是否在每个环境步骤后更新。默认为True

# The gym environment for the mdoger7.
environment:
  action_repeat: 1 # 运动重复的次数
  distance_weight: 10.0 # 距离项在奖励中的权重
  energy_weight: 0.5 # 能量项在奖励中的权重
  shake_weight: 5.0 # 垂直摇晃项在奖励中的权重
  drift_weight: 5.0 # 侧向漂移项在奖励中的权重
  distance_limit: .inf #float("inf") # 终止episode的最大距离
  observation_noise_stdev: 0.0 # 观察噪声的标准差
  leg_model_enabled: True # 是否使用腿部马达重新参数化动作空间
  torque_control_enabled: True # 是否使用扭矩控制，如果设置为False，则使用姿态控制
  hard_reset: True # 重置时清除仿真并加载所有内容。如果设置为false，则重置只是将model放回起始位置并将其姿势设为初始配置。
  num_bullet_solver_iterations: 300
  action_bound: 1
  action_eps: 0.02
  action_dim: 12
  num_substeps: 5
  num_motors: 12
  motor_angle_observation_index: 0
  observation_eps: 0.02
  render:
    use: True # 是否渲染仿真
    cam_distance: 1.0
    cam_yaw: 0
    cam_pitch: -30
  randomizer:
    ## relative range.
    base_mass_error_range: [-0.2, 0.2] # -/+20%
    leg_mass_error_range: [-0.2, 0.2] # -/+20%
    ## absolute range
    battery_voltage_range: [24.8, 26.8] # unit: volt
    motor_viscous_damping_range: [0, 0.1] # N·m·s/rad (转矩/角速度)
    leg_friction: [0.8, 1.5] # 无单位(无量纲)

  # Robot
  robot:
    num_motors: 12
    num_legs: 4
    urdf_env:
      - "../mdoger7/urdf/mdoger7.urdf"
      - "../env/pybullet_data"
    time_step: 0.01
    # 是否将model放在架子上。这仅用于调试行走步态。在此模式下，model的基座悬挂在半空中，以便更清晰地可视化其步态。
    on_rack: False
    max_force: 15
    self_collision_enabled: True # 是否允许自身碰撞
    kd_for_pd_controllers: 0.3
    pd_control_enabled: True # 是否为每个马达启用PD控制器
    accurate_motor_model_enabled: True # 是否使用准确的直流电机模型
    init_position:
      motor_direction: [-1, -1, 1, 1, -1, 1, 1, -1, 1, -1, -1, 1]
      init_position: [0, 0, 0.3]
      init_orientation: [0, 0, 0, 1]
      default_abduction_angle: 0.0
      default_hip_angle: 0
      default_knee_angle: 0
    lower_constraint_point_right: [0, 0.00, 0.] # [nouse]
    lower_constraint_point_left: [0, 0.0, 0.] # [nouse]
    link:
      base_id: -1
      foot_id: [3, 7, 11, 15]
      motor_id: [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14]
      link_names:
        [
          "lf1_joint",
          "lf2_joint",
          "lf3_joint",
          "rf1_joint",
          "rf2_joint",
          "rf3_joint",
          "lb1_joint",
          "lb2_joint",
          "lb3_joint",
          "rb1_joint",
          "rb2_joint",
          "rb3_joint",
        ]
    motor:
      torque_control_enabled: True
      kp: 2.0 # 准确电机模型的比例增益
      kd: 0.03 # 准确电机模型的微分增益
      voltage_clipping: 50 # 电压限制
      motor_resistance: 0.186 # 电机电阻
      motor_voltage: 16.0 # 电机电压
      motor_torque_constant: 0.0954 # 电机转矩常数
      motor_viscous_damping: 0 # 电机粘性阻尼
      current_table: [0, 10, 20, 30, 40, 50, 60]
      torque_table: [0, 1, 1.9, 2.45, 3.0, 3.25, 3.5]
      observed_torque_limit: 5.7 # 观测到的力矩限制
      motor_speed_limit: 500 # 电机速度限制
      # 关闭电机，以防止过热(SHUTDOWN_TIME)。有关更多详细信息，请参见minitaur.py中的ApplyAction()函数。
      overheat:
        protection: False
        shutdown_torque: 2.45
        shutdown_time: 1.0
